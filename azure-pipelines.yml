#################################################################
# Azure pipeline for livestream.idn.media
# https://github.com/IDN-Media/livestream.idn.media
#
# (c) 2021 IDN Media
##################################################################
name: $(Build.DefinitionName) - $(Date:yyyMMdd) Build $(BuildID)

trigger:
  branches:
    include:
      - master
  tags:
    include:
      - '*-RC*'
      - '*-GA*'      
pr:
  - master

pool:
   vmImage: 'ubuntu-18.04'

jobs:
- job: pull_request
  displayName: 'Build and Test for Pull Request'
  condition: and(succeeded(), in(variables['Build.Reason'], 'Manual', 'PullRequest'))
  timeoutInMinutes: 30

  steps:
  - task: GoTool@0
    inputs:
      version: $(goVersion)

  - task: Go@0
    displayName: 'go get'
    inputs:
      command: 'get'
      arguments: '-d ./...'
      workingDirectory: '$(System.DefaultWorkingDirectory)'

  - template: build/azure/doTests.yml
    parameters:
      testPath: $(testPath)

  - template: build/azure/doBuild.yml
    parameters:
      imageName: $(imageName)
      path: $(buildPath)

  - template: build/azure/doBuildDocker.yml
    parameters: 
      displayName: 'Build Microservice Docker Image'
      dockerCommand: 'build'
      dockerfile: 'Dockerfile'
      tagSourceBranch: 'PR'      

### Merged to Master ###  
- job: merge_master
  displayName: 'Build and Test for Merge Master'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  timeoutInMinutes: 30

  steps:
  - task: GoTool@0
    inputs:
      version: $(goVersion)

  - task: Go@0
    displayName: 'go get'
    inputs:
      command: 'get'
      arguments: '-d ./...'
      workingDirectory: '$(System.DefaultWorkingDirectory)'      

  - template: build/azure/doTests.yml
    parameters:
      testPath: $(testPath)
  
  - template: build/azure/doBuild.yml
    parameters:
      imageName: $(imageName)
      path: $(buildPath)

  - template: build/azure/doBuildDocker.yml
    parameters: 
      displayName: 'Build image and push to repository'
      dockerCommand: 'buildAndPush'
      dockerfile: 'Dockerfile'
      dockerRepository: $(dockerRepository)
      tag: 'development'

### RC ###
- job: release_candidate
  displayName: 'Build and Pull for RC'
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], '-RC'))
  timeoutInMinutes: 30

  steps:
    - task: GoTool@0
      inputs:
        version: $(goVersion)
  
    - task: Go@0
      displayName: 'go get'
      inputs:
        command: 'get'
        arguments: '-d ./...'
        workingDirectory: $(System.DefaultWorkingDirectory)

    - template: build/azure/doTests.yml
      parameters:
        testPath: $(testPath)

    - template: build/azure/doBuild.yml
      parameters:
        imageName: $(imageName)
        path: $(buildPath)

  
    - template: build/azure/doBuildDocker.yml
      parameters: 
        displayName: 'Build image and push to repository'
        dockerCommand: 'buildAndPush'
        dockerfile: 'Dockerfile'
        dockerRepository: $(dockerRepository)
        tag: 'staging'

### for GA ###    
- job: general_availability
  displayName: 'Build and Pull for GA'
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], '-GA'))
  timeoutInMinutes: 30

  steps:
    - task: GoTool@0
      inputs:
        version: $(goVersion)
  
    - task: Go@0
      displayName: 'go get'
      inputs:
        command: 'get'
        arguments: '-d ./...'
        workingDirectory: $(System.DefaultWorkingDirectory)

    - template: build/azure/doTests.yml
      parameters:
        testPath: $(testPath)
    
    - template: build/azure/doBuild.yml
      parameters:
        imageName: $(imageName)
        path: $(buildPath)   
  
    - template: build/azure/doBuildDocker.yml
      parameters: 
        displayName: 'Build image and push to repository'
        dockerCommand: 'buildAndPush'
        dockerfile: 'Dockerfile'
        dockerRepository: $(dockerRepository)
        tag: 'latest'
