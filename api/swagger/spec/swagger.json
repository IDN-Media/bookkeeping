{
  "openapi": "3.0.2",
  "info": {
    "description": "This is the swagger api documentation.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
    "version": "0.0.1",
    "title": "awards.idn.media",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "description": "HTTP Localhost",
      "url": "http://localhost:50051"
    }
  ],
  "tags": [
    {
      "name": "system",
      "description": "system apis"
    },
    {
      "name": "account",
      "description": "apis to work with account(s)"
    },
    {
      "name": "journal",
      "description": "apis to work with journal(s)"
    },
    {
      "name": "transaction",
      "description": "apis to work with transaction(s)"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "health check",
        "description": "Fetches system health check",
        "operationId": "healthCheckId",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/journals": {
      "post": {
        "tags": [
          "journal"
        ],
        "summary": "Creates new journal entry",
        "description": "Create a new journal entry from the given payloads",
        "operationId": "CreateJournal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJournalBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateJournalResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid payload"
          },
          "500": {
            "description": "system errors"
          }
        }
      },
      "get": {
        "tags": [
          "journal"
        ],
        "summary": "find journals",
        "description": "Find journals",
        "operationId": "FindJournal",
        "parameters": [
          {
            "name": "from",
            "required": true,
            "description": "The starting time range on the journaling time",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },{
            "name": "until",
            "required": true,
            "description": "The ending time range on the journaling time",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },{
            "name": "page",
            "required": true,
            "description": "The page number to open",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },{
            "name": "size",
            "required": true,
            "description": "Number of items to be included in the page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindJournalResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid payload"
          }
        }
      }
    },
    "/journals/reversal": {
      "post": {
        "tags": [
          "journal"
        ],
        "summary": "creates a reversal",
        "description": "Create a new reversal entry",
        "operationId": "createReversalID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReversalBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReversalResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid payload or journal already reversed"
          },
          "404": {
            "description": "journal to reverse not found"
          }
        }
      }
    },
    "/accounts/{accountNumber}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "gets an account",
        "description": "Get account details from an account number",
        "operationId": "getAccountID",
        "parameters": [
          {
            "required": true,
            "name": "accountNumber",
            "description": "The account number to fetch",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "The specified account number not found"
          },
          "400": {
            "description": "invalid payload"
          }
        }
      }
    },
    "/accounts/{accountNumber}/transactions": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "gets an account",
        "description": "Get account details from an account number",
        "operationId": "getAccountID",
        "parameters": [
          {
            "required": true,
            "name": "accountNumber",
            "description": "The account number to fetch",
            "in": "path",
            "schema": {
              "type": "string"
            }
          },{
            "name": "from",
            "required": true,
            "description": "the number of page to open",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },{
            "name": "until",
            "required": true,
            "description": "number of item in the page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },{
            "name": "page",
            "required": true,
            "description": "the number of page to open",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },{
            "name": "size",
            "required": true,
            "description": "number of item in the page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindAccountResponse"
                }
              }
            }
          },
          "401": {
            "description": "The specified account number not found"
          },
          "400": {
            "description": "invalid payload"
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "finds an account",
        "description": "Find an account from an name",
        "operationId": "findAccountID",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "description": "name of account to search for",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },{
            "name": "page",
            "required": true,
            "description": "the number of page to open",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },{
            "name": "size",
            "required": true,
            "description": "number of item in the page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid payload"
          }
        }
      },
      "post": {
        "tags": [
          "account"
        ],
        "summary": "creates new account",
        "description": "Create a new account if not exist",
        "operationId": "createAccountId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "invalid payload"
          }
        }
      }
    },
    "/journals/{JournalID}": {
      "get": {
        "tags": [
          "journal"
        ],
        "summary": "gets a journal",
        "description": "Get a journal from its id",
        "operationId": "getJournalID",
        "parameters": [
          {
            "name": "JournalID",
            "required": true,
            "description": "id of account to search for",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJournalResponse"
                }
              }
            }
          },
          "404": {
            "description": "journal not found"
          },
          "400": {
            "description": "invalid payload"
          }
        }
      }
    },
    "/transactions/{TransactionID}": {
      "get": {
        "tags": [
          "transaction"
        ],
        "summary": "gets a transaction",
        "description": "Gets a transaction by account",
        "operationId": "getTransactionID",
        "parameters": [
          {
            "name": "TransactionID",
            "required": true,
            "description": "id of account to search for",
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "transaction not found"
          },
          "400": {
            "description": "invalid payload"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthCheckResponse": {
        "description": "HealthCheck Response",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "FAIL"
            ],
            "example": "UP"
          }
        }
      },
      "CreateAccountBody": {
        "description": "CreateAccount payload",
        "type": "object",
        "required": ["Name", "Description", "COA", "Currency","Alignment","Creator"],
        "properties": {
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "COA": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          },
          "Alignment": {
            "enum" :[
              "DEBIT", 
              "CREDIT"
            ],
            "default":"DEBIT",
            "type": "string"
          },
          "Creator": {
            "type": "string"
          }
        }
      },
      "CreateAccountResponse": {
        "description": "CreateAccount Response",
        "type": "object",
        "properties": {
          "AccountNum": {
            "type": "string"
          }
        }
      },
      "CreateJournalBody": {
        "description": "CreateJournal payload",
        "type": "object",
        "required": ["Description", "Transactions","Creator"],
        "properties": {
          "Description": {
            "type": "string"
          },
          "Transactions": {
            "type": "array",
            "items": { 
                  "$ref": "#/components/schemas/TransactionInfo"
            }
          },
          "Creator": {
            "type": "string"
          }
        }
      },
      "TransactionInfo": {
        "description": "Transaction details",
        "type": "object",
        "required": ["Description", "AccountNumber", "Alignment", "Amount"],
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Alignment": {
            "enum" :[
              "DEBIT", 
              "CREDIT"
            ],
            "default":"DEBIT",
            "type": "string"
          },
          "Amount": {
            "type": "integer"
          }
        }
      },
      "TransactionInfoWithId" : {
        "type": "object",
        "allOf": [{
          "$ref" : "#/components/schemas/TransactionInfo"
        }],
        "properties": {
          "TransactionID": {
            "type": "string"
          }
        }
      },
      "CreateJournalResponse": {
        "description": "CreateJournal Response",
        "type": "object",
        "properties": {
          "JournalID": {
            "type": "string"
          }
        }
      },
      "CreateReversalBody": {
        "description": "CreateReversal payload",
        "type": "object",
        "required": ["Description", "JournalID", "Creator"],
        "properties": {
          "Description": {
            "type": "string"
          },
          "JournalID": {
            "type": "string"
          },
          "Creator": {
            "type": "string"
          }
        }
      },
      "CreateReversalResponse": {
        "description": "CreateReversal Response",
        "type": "object",
        "properties": {
          "JournalID": {
            "type": "string"
          }
        }
      },
      "GetAccountResponse": {
        "description": "GetAccount Response",
        "type": "object",
        "properties": {
          "AccountNo": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "COA": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          },
          "Alignment": {
            "enum" :[
              "DEBIT", 
              "CREDIT"
            ],
            "default":"DEBIT",
            "type": "string"
          },
          "Balance": {
            "type": "integer"
          }
        }
      },
      "FindAccountResponse": {
        "description": "FindAccount Response",
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items":{
              "$ref": "#/components/schemas/CreateAccountBody"
            }
          },
          "pagination": {
            "type": "array",
            "items":{
              "$ref": "#/components/schemas/PageResponse"
            }
          }
        }
      },
      "FindJournalResponse": {
        "description": "Find Journal Response",
        "type": "object",
        "properties": {
          "journals": {
            "type": "array",
            "items":{
              "$ref": "#/components/schemas/GetJournalResponse"
            }
          },
          "pagination": {
            "type": "array",
            "items":{
              "$ref": "#/components/schemas/PageResponse"
            }
          }
        }
      },
      "GetJournalResponse": {
        "description": "GetJournal Response",
        "type": "object",
        "properties": {
          "JournalID": {
            "type": "string"
          },
          "JournalTime": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "TotalAmount": {
            "type": "string"
          },
          "Transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionInfoWithId"
            }
          }
        }
      },
      "GetTransactionBody": {
        "description": "GetTransaction payload",
        "type": "object",
        "properties": {
          "AccountNumber": {
            "type": "string"
          },
          "timeFrom": {
            "type": "string"
          },
          "timeUntil": {
            "type": "string"
          }
        }
      },
      "GetTransactionResponse": {
        "description": "GetTransaction Response",
        "type": "object",
        "properties": {
          "TransactionInfo": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "AccountNumber": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Alignment": {
            "type": "string"
          },
          "Amount": {
            "type": "string"
          }
        }
      }, 
      "PageResponse": {
        "type": "object",
        "properties": {
          "requestPage" : {
            "type" : "integer"
          },"requestSize" : {
            "type" : "integer"
          },"totalEntries" : {
            "type" : "integer"
          },"totalPages" : {
            "type" : "integer"
          },"page" : {
            "type" : "integer"
          },"pageSize" : {
            "type" : "integer"
          },"nextPage" : {
            "type" : "integer"
          },"previousPage" : {
            "type" : "integer"
          },"lastPage" : {
            "type" : "integer"
          },"firstPage" : {
            "type" : "integer"
          },"isFirst" : {
            "type" : "boolean"
          },"isLast" : {
            "type" : "boolean"
          },"havePrevious" : {
            "type" : "boolean"
          },"haveNext" : {
            "type" : "boolean"
          },"offset" : {
            "type" : "integer"
          }
        }
      }
    }
  }
}